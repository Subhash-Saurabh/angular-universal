{
  "_from": "@nguniversal/module-map-ngfactory-loader@^6.0.0",
  "_id": "@nguniversal/module-map-ngfactory-loader@6.0.0",
  "_inBundle": false,
  "_integrity": "sha512-XWKUAC2y8FE+Fgzy+gqw/F0M1uy31q4ebyJ9R1KWSCgJYwZ/WafMtZQx0dkVY6ATRtBw42E+94c8FpwpD8v8qA==",
  "_location": "/@nguniversal/module-map-ngfactory-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@nguniversal%2fmodule-map-ngfactory-loader",
    "fetchSpec": "^6.0.0",
    "name": "@nguniversal/module-map-ngfactory-loader",
    "raw": "@nguniversal/module-map-ngfactory-loader@^6.0.0",
    "rawSpec": "^6.0.0",
    "registry": true,
    "saveSpec": null,
    "scope": "@nguniversal",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@nguniversal/module-map-ngfactory-loader/-/module-map-ngfactory-loader-6.0.0.tgz",
  "_shasum": "0dd26c3f1c26d17bb21b8dfc0da53d82b7f11028",
  "_shrinkwrap": null,
  "_spec": "@nguniversal/module-map-ngfactory-loader@^6.0.0",
  "_where": "/home/next/Desktop/universal",
  "bugs": {
    "url": "https://github.com/angular/universal/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "NgFactoryLoader which uses a Map to load ngfactories without lazy loading",
  "devDependencies": {},
  "es2015": "./fesm2015/module-map-ngfactory-loader.js",
  "esm2015": "./esm2015/module-map-ngfactory-loader_public_index.js",
  "esm5": "./esm5/module-map-ngfactory-loader_public_index.js",
  "fesm2015": "./fesm2015/module-map-ngfactory-loader.js",
  "fesm5": "./fesm5/module-map-ngfactory-loader.js",
  "homepage": "https://github.com/angular/universal",
  "keywords": [
    "lazy loading",
    "ngfactory",
    "ssr",
    "universal"
  ],
  "license": "MIT",
  "main": "./bundles/module-map-ngfactory-loader.umd.js",
  "module": "./fesm5/module-map-ngfactory-loader.js",
  "name": "@nguniversal/module-map-ngfactory-loader",
  "ng-update": {
    "packageGroup": [
      "@nguniversal/aspnetcore-engine",
      "@nguniversal/common",
      "@nguniversal/express-engine",
      "@nguniversal/hapi-engine",
      "@nguniversal/module-map-ngfactory-loader"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": "^6.0.0-rc.0",
    "@angular/core": "^6.0.0-rc.0",
    "@angular/platform-server": "^6.0.0-rc.0"
  },
  "readme": "# Module Map NgFactory Loader\n\nThis is a NgFactory Loader which uses a map of modules instead of resolving modules lazily.\n\nThis is useful when executing in node because lazy loading serves no purpose\n\n## Usage with `@angular/cli`\n\n`npm install @nguniversal/module-map-ngfactory-loader --save`\n\n`@angular/cli` will generate `LAZY_MODULE_MAP` in its main output bundle if you put app.platform = 'server'.\n\n```ts\nconst { provideModuleMap } = require('@nguniversal/module-map-ngfactory-loader');\nconst { AppModuleNgFactory, LAZY_MODULE_MAP } = require('main.bundle.js');\n\nrenderModuleFactory(AppModuleNgFactory, {\n  document: '<app-root></app-root>',\n  url: '/',\n  extraProviders: [\n    provideModuleMap(LAZY_MODULE_MAP)\n  ]\n})\n```\n\nAdd `ModuleMapLoaderModule` to your server module\n\n```ts\nimport {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/angular/universal.git"
  },
  "typings": "./module-map-ngfactory-loader_public_index.d.ts",
  "version": "6.0.0"
}
